// Code generated by MockGen. DO NOT EDIT.
// Source: repositories/entity/repository.go
//
// Generated by this command:
//
//	mockgen -source=repositories/entity/repository.go -destination=test/mocks/entity/repository.go -package=mocks
//

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	entity "go-source/repositories/entity1"
	reflect "reflect"

	primitive "go.mongodb.org/mongo-driver/bson/primitive"
	gomock "go.uber.org/mock/gomock"
)

// MockIEntityRepository is a mock of IEntityRepository interface.
type MockIEntityRepository struct {
	ctrl     *gomock.Controller
	recorder *MockIEntityRepositoryMockRecorder
	isgomock struct{}
}

// MockIEntityRepositoryMockRecorder is the mock recorder for MockIEntityRepository.
type MockIEntityRepositoryMockRecorder struct {
	mock *MockIEntityRepository
}

// NewMockIEntityRepository creates a new mock instance.
func NewMockIEntityRepository(ctrl *gomock.Controller) *MockIEntityRepository {
	mock := &MockIEntityRepository{ctrl: ctrl}
	mock.recorder = &MockIEntityRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIEntityRepository) EXPECT() *MockIEntityRepositoryMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockIEntityRepository) Create(ctx context.Context, data *entity.Entity) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", ctx, data)
	ret0, _ := ret[0].(error)
	return ret0
}

// Create indicates an expected call of Create.
func (mr *MockIEntityRepositoryMockRecorder) Create(ctx, data any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockIEntityRepository)(nil).Create), ctx, data)
}

// Get mocks base method.
func (m *MockIEntityRepository) Get(ctx context.Context, id primitive.ObjectID) (*entity.Entity, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", ctx, id)
	ret0, _ := ret[0].(*entity.Entity)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockIEntityRepositoryMockRecorder) Get(ctx, id any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockIEntityRepository)(nil).Get), ctx, id)
}
